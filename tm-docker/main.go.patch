diff --git a/cmd/tendermint/main.go b/cmd/tendermint/main.go
index a5a8d2d8..b0dc45b0 100644
--- a/cmd/tendermint/main.go
+++ b/cmd/tendermint/main.go
@@ -4,7 +4,9 @@ import (
 	"os"
 	"path/filepath"

+	"github.com/oneiro-ndev/o11y/pkg/honeycomb"
 	"github.com/tendermint/tendermint/libs/cli"
+	"github.com/tendermint/tendermint/libs/log"

 	cmd "github.com/tendermint/tendermint/cmd/tendermint/commands"
 	cfg "github.com/tendermint/tendermint/config"
@@ -36,7 +38,22 @@ func main() {
 	//	* Provide their own DB implementation
 	// can copy this file and use something other than the
 	// DefaultNewNode function
-	nodeFunc := nm.DefaultNewNode
+
+	// nodeFunc replaces the passed-in logger
+	// with a honeycombLogger (if one is available).
+	// Otherwise, it constructs a standard tm logger.
+	nodeFunc := func(config *cfg.Config, logger log.Logger) (*nm.Node, error) {
+		if logwriter, err := honeycomb.NewWriter(); err != nil {
+			// if honeycomb fails, just build a standard tm logger
+			logger = log.NewTMJSONLogger(log.NewSyncWriter(os.Stderr))
+			logger.Info("unable to initialize honeycomb - using standard logger")
+		} else {
+			logger = log.NewTMJSONLogger(log.NewSyncWriter(logwriter))
+			logger.With("hives", 1).Info("honeycomb initialized")
+		}
+
+		return nm.DefaultNewNode(config, logger)
+	}

 	// Create & start node
 	rootCmd.AddCommand(cmd.NewRunNodeCmd(nodeFunc))
